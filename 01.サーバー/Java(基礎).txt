1.
public classは1つのJavaファイルに1つしか存在できず、ファイル名と一致している必要がある。


2.
オブジェクト(객체,오브젝트) : オブジェクトそのものを指す一般的な用語
インスタンス(인스턴스) : 特定のクラスから生成されたオブジェクト


3.
Tv t;            // Tvクラス型の参照変数、tの宣言
t = new TV();    // Tvクラスのインスタンスを生成し、そのアドレスをtに保存
⇒
Tv t = new TV(); // つまり、ここでtはリモコンみたいな役割


4.
配列を宣言しただけでは、オブジェクトが3つ生成されるわけではない。
生成されるのは参照変数だけ。

Tv[] tvArr = new Tv[3]; // オブジェクト配列
tvArr [0] = new Tv();
tvArr [1] = new Tv();
tvArr [2] = new Tv();   // このように、個別にインスタンスを生成して入れる必要がある。


5.
class Variables
{
   int iv;           // インスタンス変数(オブジェクト生成後に使用可能)
   static int cv;    // クラス変数(いつでも使用可能)

    void method () {
        int Iv = 0;  // メソッド変数(メソッド内でのみ使用可能)
     }
}

・インスタンス変数
主に個別属性に活用。
使用時には インスタンス名.変数名（例：c.color）と指定。
・クラス変数（静的変数）
主に共通属性に活用。
使用時には クラス名.変数名（例：Card.height）と指定。
いつでもと言うより、正確にはクラスがメモリにロードされた時点から使用可能。
・メソッド変数
メソッド外の他の変数と重複する名でも関係ない。


6.
インスタンスメソッド
・インスタンス生成後、「インスタンス名.メソッド名」で呼び出す。
・インスタンス変数やインスタンスメソッドに関連した作業を行うメソッド。
・メソッド内でインスタンス変数の使用が可能。

staticメソッド(クラスメソッド、静的メソッド)
・インスタンスを生成せず、「クラス名.メソッド名」で呼び出す。
・インスタンス変数やインスタンスメソッドに関連しない作業を行うメソッド。
・メソッド内でインスタンス変数の使用は不可能。


7.
基本データ型 : int, char, float, boolean
複合データ型 : array, list, class, string


8.return
戻り値は0個か1個だけ可能なので、2個以上は配列やオブジェクトに処理する。
メソッド実行中にreturnに会ったら、メソッド実行を中断して呼び出し元に戻る。
リターンタイプがvoidでなければ、必ずreturnの定義が必要。